{"ast":null,"code":"export default {\n  mounted() {\n    this.initSlider();\n  },\n\n  methods: {\n    initSlider() {\n      const items = this.$refs.slider.querySelectorAll('.item');\n      const circles = this.$refs.slider.querySelectorAll('.circle');\n      const leftBtn = this.$refs.slider.querySelector('#btn-left');\n      const rightBtn = this.$refs.slider.querySelector('#btn-right');\n      const content = this.$refs.slider.querySelector('.slider');\n      let index = 0;\n      let timer = null; //清除class\n\n      const clearclass = () => {\n        for (let i = 0; i < items.length; i++) {\n          items[i].className = \"item\";\n          circles[i].className = \"circle\";\n          circles[i].setAttribute(\"num\", i);\n        }\n      };\n      /*只显示一个class*/\n\n\n      function move() {\n        clearclass();\n        items[index].className = \"item active\";\n        circles[index].className = \"circle white\";\n      }\n\n      function lazyload() {\n        const images = document.getElementsByTagName('img');\n        const len = images.length;\n        const n = 0; //存储图片加载到的位置，避免每次都从第一张图片开始遍历\t\t\n\n        return function () {\n          const seeHeight = document.documentElement.clientHeight;\n          const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\n          for (const i = n; i < len; i++) {\n            if (images[i].offsetTop < seeHeight + scrollTop) {\n              if (images[i].getAttribute('src') === 'images/loading.gif') {\n                images[i].src = images[i].getAttribute('data-src');\n              }\n\n              n = n + 1;\n            }\n          }\n        };\n      }\n\n      const loadImages = lazyload();\n      loadImages(); //初始化首页的页面图片\n\n      window.addEventListener('scroll', loadImages, false); //点击右边按钮切换下一张图片\n\n      rightBtn.onclick = () => {\n        if (index < items.length - 1) {\n          index++;\n        } else {\n          index = 0;\n        }\n\n        move();\n      }; //点击左边按钮切换上一张图片\n\n\n      leftBtn.onclick = () => {\n        if (index < items.length) {\n          index--;\n        } else {\n          index = items.length - 1;\n        }\n\n        move();\n      }; //开始定时器，点击右边按钮，实现轮播\n\n\n      timer = setInterval(() => {\n        rightBtn.onclick();\n      }, 3000); //点击圆点时，跳转到对应图片\n\n      circles.forEach(circle => {\n        circle.addEventListener(\"click\", function () {\n          const point_index = this.getAttribute(\"num\");\n          index = point_index;\n          move();\n        });\n      }); //鼠标移入清除定时器，并开启一个三秒的定时器，使慢慢转动\n\n      content.onmouseover = () => {\n        clearInterval(timer);\n        timer = setInterval(() => {\n          rightBtn.onclick();\n        }, 3000);\n      }; //鼠标移出又开启定时器\n\n\n      content.onmouseleave = () => {\n        clearInterval(timer);\n        timer = setInterval(() => {\n          rightBtn.onclick();\n        }, 3000);\n      };\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["mounted","initSlider","methods","items","$refs","slider","querySelectorAll","circles","leftBtn","querySelector","rightBtn","content","index","timer","clearclass","i","length","className","setAttribute","move","lazyload","images","document","getElementsByTagName","len","n","seeHeight","documentElement","clientHeight","scrollTop","body","offsetTop","getAttribute","src","loadImages","window","addEventListener","onclick","setInterval","forEach","circle","point_index","onmouseover","clearInterval","onmouseleave"],"sourceRoot":"","sources":["E:\\Github\\blog\\aurora-vue\\aurora-blog\\src\\views\\slider.vue"],"sourcesContent":["<template>\r\n<!-- 轮播图开始 -->\r\n<div class=\"lunbo\">\r\n    <div class=\"slider\" ref=\"slider\">\r\n        <ul id=\"item\">\r\n            <li class=\"item\">\r\n                <a href=\"#\"><img data-src=\"../assets/images/1.jpg\" loading=\"lazy\"  ></a>\r\n            </li>\r\n            <li class=\"item\">\r\n                <a href=\"#\"><img src=\"../assets/images/2.jpg\"  loading=\"lazy\" ></a>\r\n            </li>\r\n            <li class=\"item\">\r\n                <a href=\"#\"><img src=\"../assets/images/3.jpg\" loading=\"lazy\"  ></a>\r\n            </li>\r\n            <li class=\"item\">\r\n                <a href=\"#\"><img src=\"../assets/images/4.jpg\" loading=\"lazy\" ></a>\r\n            </li>\r\n        </ul>\r\n        <div class=\"my-el-button\" id=\"btn-left\">&lt;</div>\r\n        <div class=\"my-el-button\" id=\"btn-right\">></div>\r\n        <ul id=\"circle\">\r\n            <li class=\"circle\"></li>\r\n            <li class=\"circle\"></li>\r\n            <li class=\"circle\"></li>\r\n            <li class=\"circle\"></li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default{\r\nmounted() {\r\n    this.initSlider();\r\n  },\r\n  methods: {\r\n    initSlider() {\r\n      const items = this.$refs.slider.querySelectorAll('.item');\r\n      const circles = this.$refs.slider.querySelectorAll('.circle');\r\n      const leftBtn = this.$refs.slider.querySelector('#btn-left');\r\n      const rightBtn = this.$refs.slider.querySelector('#btn-right');\r\n      const content = this.$refs.slider.querySelector('.slider');\r\n      let index = 0;\r\n      let timer = null;\r\n\r\n      //清除class\r\n      const clearclass = () => {\r\n        for (let i = 0; i < items.length; i++) {\r\n          items[i].className = \"item\";\r\n          circles[i].className = \"circle\";\r\n          circles[i].setAttribute(\"num\", i);\r\n        }\r\n      }\r\n\r\n      /*只显示一个class*/\r\n      function move() {\r\n        clearclass();\r\n        items[index].className = \"item active\";\r\n        circles[index].className = \"circle white\";\r\n      }\r\n\r\n\r\n      function lazyload() {\r\n        const images = document.getElementsByTagName('img');\r\n        const len    = images.length;\r\n        const n      = 0;      //存储图片加载到的位置，避免每次都从第一张图片开始遍历\t\t\r\n        return function() {\r\n        const seeHeight = document.documentElement.clientHeight;\r\n        const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\r\n        for(const i = n; i < len; i++) {\r\n            if(images[i].offsetTop < seeHeight + scrollTop) {\r\n                if(images[i].getAttribute('src') === 'images/loading.gif') {\r\n              images[i].src = images[i].getAttribute('data-src');\r\n              }\r\n              n = n + 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n        const loadImages = lazyload();\r\n        loadImages();          //初始化首页的页面图片\r\n        window.addEventListener('scroll', loadImages, false);\r\n\r\n      //点击右边按钮切换下一张图片\r\n      rightBtn.onclick = () => {\r\n        if (index < items.length - 1) {\r\n          index++;\r\n        } else {\r\n          index = 0;\r\n        }\r\n        move();\r\n      }\r\n\r\n      //点击左边按钮切换上一张图片\r\n      leftBtn.onclick = () => {\r\n        if (index < items.length) {\r\n          index--;\r\n        } else {\r\n          index = items.length - 1;\r\n        }\r\n        move();\r\n      }\r\n\r\n      //开始定时器，点击右边按钮，实现轮播\r\n      timer = setInterval(() => {\r\n        rightBtn.onclick();\r\n      }, 3000);\r\n\r\n      //点击圆点时，跳转到对应图片\r\n      circles.forEach(circle => {\r\n        circle.addEventListener(\"click\", function () {\r\n          const point_index = this.getAttribute(\"num\");\r\n          index = point_index;\r\n          move();\r\n        });\r\n      });\r\n\r\n      //鼠标移入清除定时器，并开启一个三秒的定时器，使慢慢转动\r\n      content.onmouseover = () => {\r\n        clearInterval(timer);\r\n        timer = setInterval(() => {\r\n          rightBtn.onclick();\r\n        }, 3000);\r\n      }\r\n\r\n      //鼠标移出又开启定时器\r\n      content.onmouseleave = () => {\r\n        clearInterval(timer);\r\n        timer = setInterval(() => {\r\n          rightBtn.onclick();\r\n        }, 3000);\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n@import url(../assets/css/lg.css);\r\n@import url(../assets/css/slider.css);\r\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../assets/images/1.jpg';\nimport _imports_1 from '../assets/images/2.jpg';\nimport _imports_2 from '../assets/images/3.jpg';\nimport _imports_3 from '../assets/images/4.jpg';\n\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"banner\\\"><div class=\\\"warp\\\"><!-- 这里修改自己的图片路径哦~ --><div class=\\\"item\\\"><img src=\\\"\" + _imports_0 + \"\\\" alt=\\\"\\\"></div><div class=\\\"item\\\"><img src=\\\"\" + _imports_1 + \"\\\" alt=\\\"\\\"></div><div class=\\\"item\\\"><img src=\\\"\" + _imports_2 + \"\\\" alt=\\\"\\\"></div><div class=\\\"item\\\"><img src=\\\"\" + _imports_3 + \"\\\" alt=\\\"\\\"></div></div><div class=\\\"div1\\\"> &lt; </div><div class=\\\"div2\\\"> &gt; </div><!-- 小圆点 --><div class=\\\"pagenation\\\"><div id=\\\"pagenation-item0\\\"></div><div id=\\\"pagenation-item1\\\"></div><div id=\\\"pagenation-item2\\\"></div><div id=\\\"pagenation-item3\\\"></div></div></div>\", 1);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 轮播图开始 \"), _hoisted_1], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";OAKmCA,gBAA4B;OAC5BC,gBAA4B;OAC5BC,gBAA4B;OAC5BC,gBAA4B;;;;;6DAP/DC,gCACAC","names":["_imports_0","_imports_1","_imports_2","_imports_3","_createCommentVNode","_hoisted_1"],"sourceRoot":"","sources":["E:\\Github\\blog\\aurora-vue\\aurora-blog\\src\\views\\slider.vue"],"sourcesContent":["<template>\r\n<!-- 轮播图开始 -->\r\n<div class=\"banner\">\r\n        <div class=\"warp\">\r\n            <!-- 这里修改自己的图片路径哦~ -->\r\n            <div class=\"item\"><img src=\"../assets/images/1.jpg\" alt=\"\"></div>\r\n            <div class=\"item\"><img src=\"../assets/images/2.jpg\" alt=\"\"></div>\r\n            <div class=\"item\"><img src=\"../assets/images/3.jpg\" alt=\"\"></div>\r\n            <div class=\"item\"><img src=\"../assets/images/4.jpg\" alt=\"\"></div>\r\n        </div>\r\n        <div class=\"div1\">\r\n            &lt;\r\n        </div>\r\n        <div class=\"div2 \">\r\n            &gt;\r\n        </div>\r\n        <!-- 小圆点 -->\r\n        <div class=\"pagenation\">\r\n            <div id=\"pagenation-item0\"></div>\r\n            <div id=\"pagenation-item1\"></div>\r\n            <div id=\"pagenation-item2\"></div>\r\n            <div id=\"pagenation-item3\"></div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default{\r\nmounted() {\r\n    this.initSlider();\r\n  },\r\n  methods: {\r\n    initSlider() {\r\n      const useIts = this.$refs.slider.querySelectorAll('.useIt');\r\n      const yuans = this.$refs.slider.querySelectorAll('.yuan');\r\n      const leftBtn = this.$refs.slider.querySelector('#button-l');\r\n      const rightBtn = this.$refs.slider.querySelector('#button-r');\r\n      const content = this.$refs.slider.querySelector('.slider');\r\n      let index = 0;\r\n      let timer = null;\r\n\r\n      //清除class\r\n      const clearclass = () => {\r\n        for (let i = 0; i < useIts.length; i++) {\r\n          useIts[i].className = \"useIt\";\r\n          yuans[i].className = \"yuan\";\r\n          yuans[i].setAttribute(\"num\", i);\r\n        }\r\n      }\r\n\r\n      /*只显示一个class*/\r\n      function move() {\r\n        clearclass();\r\n        useIts[index].className = \"useIt active\";\r\n        yuans[index].className = \"yuan white\";\r\n      }\r\n\r\n      //点击右边按钮切换下一张图片\r\n      rightBtn.onclick = () => {\r\n        if (index < useIts.length - 1) {\r\n          index++;\r\n        } else {\r\n          index = 0;\r\n        }\r\n        move();\r\n      }\r\n\r\n      //点击左边按钮切换上一张图片\r\n      leftBtn.onclick = () => {\r\n        if (index < useIts.length) {\r\n          index--;\r\n        } else {\r\n          index = useIts.length - 1;\r\n        }\r\n        move();\r\n      }\r\n\r\n      //开始定时器，点击右边按钮，实现轮播\r\n      timer = setInterval(() => {\r\n        rightBtn.onclick();\r\n      }, 3000);\r\n\r\n      //点击圆点时，跳转到对应图片\r\n      yuans.forEach(yuan => {\r\n        yuan.addEventListener(\"click\", function () {\r\n          const point_index = this.getAttribute(\"num\");\r\n          index = point_index;\r\n          move();\r\n        });\r\n      });\r\n\r\n      //鼠标移入清除定时器，并开启一个三秒的定时器，使慢慢转动\r\n      content.onmouseover = () => {\r\n        clearInterval(timer);\r\n        timer = setInterval(() => {\r\n          rightBtn.onclick();\r\n        }, 3000);\r\n      }\r\n\r\n      //鼠标移出又开启定时器\r\n      content.onmouseleave = () => {\r\n        clearInterval(timer);\r\n        timer = setInterval(() => {\r\n          rightBtn.onclick();\r\n        }, 1500);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n@import url(../assets/css/lg.css);\r\n@import url(../assets/css/banner.css);\r\n</style>"]},"metadata":{},"sourceType":"module"}
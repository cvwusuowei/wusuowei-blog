{"ast":null,"code":"// 等待页面完全加载后再执行脚本\nwindow.onload = function () {\n  // 获取所有图片标记\n  var images = document.querySelectorAll('img[src]'); // 遍历图片标记\n\n  Array.prototype.forEach.call(images, function (image) {\n    // 修改 src\n    image.setAttribute('src', image.getAttribute('src'));\n  });\n};\n\nexport default {\n  mounted() {\n    this.initSlider();\n  },\n\n  methods: {\n    initSlider() {\n      const items = this.$refs.slider.querySelectorAll('.item');\n      const circles = this.$refs.slider.querySelectorAll('.circle');\n      const leftBtn = this.$refs.slider.querySelector('#btn-left');\n      const rightBtn = this.$refs.slider.querySelector('#btn-right');\n      const content = this.$refs.slider.querySelector('.slider');\n      let index = 0;\n      let timer = null; //清除class\n\n      const clearclass = () => {\n        for (let i = 0; i < items.length; i++) {\n          items[i].className = \"item\";\n          circles[i].className = \"circle\";\n          circles[i].setAttribute(\"num\", i);\n        }\n      };\n      /*只显示一个class*/\n\n\n      function move() {\n        clearclass();\n        items[index].className = \"item active\";\n        circles[index].className = \"circle white\";\n      } //点击右边按钮切换下一张图片\n\n\n      rightBtn.onclick = () => {\n        if (index < items.length - 1) {\n          index++;\n        } else {\n          index = 0;\n        }\n\n        move();\n      }; //点击左边按钮切换上一张图片\n\n\n      leftBtn.onclick = () => {\n        if (index < items.length) {\n          index--;\n        } else {\n          index = items.length - 1;\n        }\n\n        move();\n      }; //开始定时器，点击右边按钮，实现轮播\n\n\n      timer = setInterval(() => {\n        rightBtn.onclick();\n      }, 3000); //点击圆点时，跳转到对应图片\n\n      circles.forEach(circle => {\n        circle.addEventListener(\"click\", function () {\n          const point_index = this.getAttribute(\"num\");\n          index = point_index;\n          move();\n        });\n      }); //鼠标移入清除定时器，并开启一个三秒的定时器，使慢慢转动\n\n      content.onmouseover = () => {\n        clearInterval(timer);\n        timer = setInterval(() => {\n          rightBtn.onclick();\n        }, 3000);\n      }; //鼠标移出又开启定时器\n\n\n      content.onmouseleave = () => {\n        clearInterval(timer);\n        timer = setInterval(() => {\n          rightBtn.onclick();\n        }, 3000);\n      };\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["window","onload","images","document","querySelectorAll","Array","prototype","forEach","call","image","setAttribute","getAttribute","mounted","initSlider","methods","items","$refs","slider","circles","leftBtn","querySelector","rightBtn","content","index","timer","clearclass","i","length","className","move","onclick","setInterval","circle","addEventListener","point_index","onmouseover","clearInterval","onmouseleave"],"sourceRoot":"","sources":["E:\\Github\\blog\\aurora-vue\\aurora-blog\\src\\views\\slider.vue"],"sourcesContent":["<template>\r\n<!-- 轮播图开始 -->\r\n<div class=\"lunbo\">\r\n    <div class=\"slider\" ref=\"slider\">\r\n        <ul id=\"item\">\r\n            <li class=\"item\">\r\n                <a href=\"#\"><img src=\"../assets/images/1.jpg\" loading=\"lazy\"  ></a>\r\n            </li>\r\n            <li class=\"item\">\r\n                <a href=\"#\"><img src=\"../assets/images/2.jpg\"  loading=\"lazy\" ></a>\r\n            </li>\r\n            <li class=\"item\">\r\n                <a href=\"#\"><img src=\"../assets/images/3.jpg\" loading=\"lazy\"  ></a>\r\n            </li>\r\n            <li class=\"item\">\r\n                <a href=\"#\"><img src=\"../assets/images/4.jpg\" loading=\"lazy\" ></a>\r\n            </li>\r\n        </ul>\r\n        <div class=\"my-el-button\" id=\"btn-left\">&lt;</div>\r\n        <div class=\"my-el-button\" id=\"btn-right\">></div>\r\n        <ul id=\"circle\">\r\n            <li class=\"circle\"></li>\r\n            <li class=\"circle\"></li>\r\n            <li class=\"circle\"></li>\r\n            <li class=\"circle\"></li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n// 等待页面完全加载后再执行脚本\r\nwindow.onload = function() {\r\n        // 获取所有图片标记\r\n        var images = document.querySelectorAll('img[src]');\r\n        // 遍历图片标记\r\n        Array.prototype.forEach.call(images, function(image) {\r\n            // 修改 src\r\n            image.setAttribute('src', image.getAttribute('src'));\r\n        });\r\n    }\r\nexport default{\r\nmounted() {\r\n    this.initSlider();\r\n  },\r\n  methods: {\r\n    initSlider() {\r\n      const items = this.$refs.slider.querySelectorAll('.item');\r\n      const circles = this.$refs.slider.querySelectorAll('.circle');\r\n      const leftBtn = this.$refs.slider.querySelector('#btn-left');\r\n      const rightBtn = this.$refs.slider.querySelector('#btn-right');\r\n      const content = this.$refs.slider.querySelector('.slider');\r\n      let index = 0;\r\n      let timer = null;\r\n\r\n      //清除class\r\n      const clearclass = () => {\r\n        for (let i = 0; i < items.length; i++) {\r\n          items[i].className = \"item\";\r\n          circles[i].className = \"circle\";\r\n          circles[i].setAttribute(\"num\", i);\r\n        }\r\n      }\r\n\r\n      /*只显示一个class*/\r\n      function move() {\r\n        clearclass();\r\n        items[index].className = \"item active\";\r\n        circles[index].className = \"circle white\";\r\n      }\r\n\r\n      //点击右边按钮切换下一张图片\r\n      rightBtn.onclick = () => {\r\n        if (index < items.length - 1) {\r\n          index++;\r\n        } else {\r\n          index = 0;\r\n        }\r\n        move();\r\n      }\r\n\r\n      //点击左边按钮切换上一张图片\r\n      leftBtn.onclick = () => {\r\n        if (index < items.length) {\r\n          index--;\r\n        } else {\r\n          index = items.length - 1;\r\n        }\r\n        move();\r\n      }\r\n\r\n      //开始定时器，点击右边按钮，实现轮播\r\n      timer = setInterval(() => {\r\n        rightBtn.onclick();\r\n      }, 3000);\r\n\r\n      //点击圆点时，跳转到对应图片\r\n      circles.forEach(circle => {\r\n        circle.addEventListener(\"click\", function () {\r\n          const point_index = this.getAttribute(\"num\");\r\n          index = point_index;\r\n          move();\r\n        });\r\n      });\r\n\r\n      //鼠标移入清除定时器，并开启一个三秒的定时器，使慢慢转动\r\n      content.onmouseover = () => {\r\n        clearInterval(timer);\r\n        timer = setInterval(() => {\r\n          rightBtn.onclick();\r\n        }, 3000);\r\n      }\r\n\r\n      //鼠标移出又开启定时器\r\n      content.onmouseleave = () => {\r\n        clearInterval(timer);\r\n        timer = setInterval(() => {\r\n          rightBtn.onclick();\r\n        }, 3000);\r\n      }\r\n    },\r\n    \r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n@import url(../assets/css/lg.css);\r\n@import url(../assets/css/slider.css);\r\n</style>"]},"metadata":{},"sourceType":"module"}
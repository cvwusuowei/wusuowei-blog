{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  id: \"pic_container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" 12 \");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" 13 \");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" 14 \");\n\nconst _hoisted_5 = {\n  id: \"pics\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\" 15 \");\n\nconst _hoisted_7 = [\"src\"];\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\" 16 \");\n\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\" 17 18 \");\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\" 19 \");\n\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\" 20 \");\n\nconst _hoisted_12 = [\"onClick\"];\n\nconst _hoisted_13 = /*#__PURE__*/_createTextVNode(\" 21 \");\n\nconst _hoisted_14 = /*#__PURE__*/_createTextVNode(\" 22 23 \");\n\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"div\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_16 = [_hoisted_15];\n\nconst _hoisted_17 = /*#__PURE__*/_createTextVNode(\" 24 \");\n\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"div\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_19 = [_hoisted_18];\n\nconst _hoisted_20 = /*#__PURE__*/_createTextVNode(\" 25 \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" 这个就是展示图片 \"), _hoisted_3, _createCommentVNode(\" <img id=\\\"pic\\\" :src=\\\"pic_src[index]\\\" ref=\\\"pic\\\">  这个样子的，只改变img的src不好过渡 \"), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.pic_src, (item, i) => {\n    return _openBlock(), _createElementBlock(\"img\", {\n      id: \"pic\",\n      onMouseover: _cache[0] || (_cache[0] = $event => _ctx.mouseOver()),\n      onMouseout: _cache[1] || (_cache[1] = $event => _ctx.mouseOut()),\n      src: item,\n      ref_for: true,\n      ref: \"pic\"\n    }, null, 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_7);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  )), _hoisted_8]), _hoisted_9, _createCommentVNode(\" 这个是下面的点，用v-for生成的点，用pic_src的大小确定的点，并且要知道这个点的index \"), _hoisted_10, _createElementVNode(\"div\", {\n    id: \"dots\",\n    onMouseover: _cache[2] || (_cache[2] = $event => _ctx.mouseOver()),\n    onMouseout: _cache[3] || (_cache[3] = $event => _ctx.mouseOut())\n  }, [_hoisted_11, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.pic_src.length, (count, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      onClick: $event => _ctx.index = i,\n      class: _normalizeClass(i === _ctx.index ? 'focus' : '')\n    }, null, 10\n    /* CLASS, PROPS */\n    , _hoisted_12);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  )), _hoisted_13], 32\n  /* HYDRATE_EVENTS */\n  ), _hoisted_14, _createElementVNode(\"div\", {\n    class: \"arrow_left\",\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.onLeft && _ctx.onLeft(...args)),\n    onMouseover: _cache[5] || (_cache[5] = $event => _ctx.mouseOver()),\n    onMouseout: _cache[6] || (_cache[6] = $event => _ctx.mouseOut())\n  }, _hoisted_16, 32\n  /* HYDRATE_EVENTS */\n  ), _hoisted_17, _createElementVNode(\"div\", {\n    class: \"arrow_right\",\n    onClick: _cache[7] || (_cache[7] = (...args) => _ctx.onRight && _ctx.onRight(...args)),\n    onMouseover: _cache[8] || (_cache[8] = $event => _ctx.mouseOver()),\n    onMouseout: _cache[9] || (_cache[9] = $event => _ctx.mouseOut())\n  }, _hoisted_19, 32\n  /* HYDRATE_EVENTS */\n  ), _hoisted_20]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;;;iDAAgB;;iDACE;;iDAC4D;;;EACxEA,EAAE,EAAC;;;iDAAQ;;;;iDACiG;;iDAC3G;;kDAEoD;;kDACK;;;;kDAC6C;;kDACtG;;iCAEkFC,oBAAW,KAAX,EAAW,IAAX,EAAW,IAAX,EAAW;AAAA;AAAX;;qBAAAC;;kDAAiB;;iCACfD,oBAAW,KAAX,EAAW,IAAX,EAAW,IAAX,EAAW;AAAA;AAAX;;qBAAAE;;kDAAiB;;;uBAbpHC,oBAcW,KAdX,cAcW,aAbFC,iCAaE,cAZFA,mGAYE,cAXFJ,oBAEM,KAFN,cAEM,gCADNG,oBAAiHE,SAAjH,EAAiH,IAAjH,EAAiHC,YAA/EC,YAA+E,EAAxE,CAAlBC,IAAkB,EAAbC,CAAa,KAAZ;yBAA7BN,oBAAiH,KAAjH,EAAiH;MAA5GJ,EAAE,EAAC,KAAyG;MAArEW,WAAS,sCAAEH,gBAAF,CAA4D;MAA5CI,UAAQ,sCAAEJ,eAAF,CAAoC;MAArBK,GAAG,EAAEJ,IAAgB;mBAAA;MAAVK,GAAG,EAAC;IAAM,CAAjH;;IAAA;GAAiH,CAAjH;;EAAA,CACM,cAFN,CAWE,cAPFT,0EAOE,eANFJ,oBAEM,KAFN,EAEM;IAFDD,EAAE,EAAC,MAEF;IAFUW,WAAS,sCAAEH,gBAAF,CAEnB;IAFmCI,UAAQ,sCAAEJ,eAAF;EAE3C,CAFN,mCACIJ,oBAAwGE,SAAxG,EAAwG,IAAxG,EAAwGC,YAA/EC,aAAQO,MAAuE,EAAjE,CAA1BC,KAA0B,EAApBN,CAAoB,KAAnB;yBAApBN,oBAAwG,KAAxG,EAAwG;MAA9Da,OAAK,YAAET,aAAQE,CAA+C;MAA1CQ,KAAK,kBAAER,CAAC,KAAKF,UAAN,GAAW,OAAX,GAAW,EAAb;IAAqC,CAAxG;;IAAA;GAAwG,CAAxG;;EAAA,gBADJ;;EAAA,CAME,eAFFP,oBAAyG,KAAzG,EAAyG;IAApGiB,KAAK,EAAC,YAA8F;IAAhFD,OAAK,yCAAET,mCAAF,CAA2E;IAAhEG,WAAS,sCAAEH,gBAAF,CAAuD;IAAvCI,UAAQ,sCAAEJ,eAAF;EAA+B,CAAzG;;EAAA,CAEE,eADFP,oBAA2G,KAA3G,EAA2G;IAAtGiB,KAAK,EAAC,aAAgG;IAAjFD,OAAK,yCAAET,qCAAF,CAA4E;IAAhEG,WAAS,sCAAEH,gBAAF,CAAuD;IAAvCI,UAAQ,sCAAEJ,eAAF;EAA+B,CAA3G;;EAAA,CACE,cAdX","names":["id","_createElementVNode","_hoisted_15","_hoisted_18","_createElementBlock","_createCommentVNode","_Fragment","_renderList","_ctx","item","i","onMouseover","onMouseout","src","ref","length","count","onClick","class"],"sourceRoot":"","sources":["E:\\Github\\blog\\aurora-vue\\aurora-blog\\src\\views\\slider.vue"],"sourcesContent":["<template>\r\n  <div id=\"pic_container\">\r\n12         <!-- 这个就是展示图片 -->\r\n13         <!-- <img id=\"pic\" :src=\"pic_src[index]\" ref=\"pic\">  这个样子的，只改变img的src不好过渡 -->\r\n14         <div id=\"pics\" >\r\n15         <img id=\"pic\"  v-for=\"(item,i) in pic_src\" @mouseover=\"mouseOver()\" @mouseout=\"mouseOut()\" :src=\"item\" ref=\"pic\">\r\n16         </div>\r\n17         \r\n18         <!-- 这个是下面的点，用v-for生成的点，用pic_src的大小确定的点，并且要知道这个点的index -->\r\n19         <div id=\"dots\" @mouseover=\"mouseOver()\" @mouseout=\"mouseOut()\">\r\n20             <div v-for=\"(count,i) in pic_src.length\" @click=\"index = i\"  :class=\"i === index ? 'focus' : '' \"></div>\r\n21         </div>\r\n22         \r\n23         <div class=\"arrow_left\" @click=\"onLeft\" @mouseover=\"mouseOver()\" @mouseout=\"mouseOut()\"><div></div></div>\r\n24         <div class=\"arrow_right\" @click=\"onRight\" @mouseover=\"mouseOver()\" @mouseout=\"mouseOut()\"><div></div></div>\r\n25     </div>\r\n  \r\n  </template>\r\n  \r\n  <script>\r\n  export default{\r\n  mounted() {\r\n      this.initSlider();\r\n    },\r\n    methods: {\r\n      initSlider() {\r\n          const index = 0; //定义初始下标\r\n          const banner = document.getElementsByClassName(\"banner\")[0];\r\n          const itemList = document.getElementsByClassName(\"item\");\r\n          const pagenationList = document.querySelectorAll(\".pagenation>div\");\r\n          const pagenation = document.querySelector(\".pagenation\");\r\n          itemList[0].style.opacity = 1;\r\n          pagenationList[0].style.background = \"blue\" //初始第一张图对应的小圆点的颜色为蓝色\r\n          const up = document.getElementsByClassName(\"div1\")[0];\r\n          const next = document.getElementsByClassName(\"div2\")[0];\r\n          //下一张图片（封装方便下面自动播放定时器调用）\r\n          function nextFn() {\r\n              index = index >= itemList.length - 1 ? 0 : ++index; //判断点击到了最后一张图片再次点击返回到第一张图\r\n              for (var i = 0; i < itemList.length; i++) {\r\n                  itemList[i].style.opacity = 0; //图片透明度为0图片隐藏\r\n                  pagenationList[i].style.background = \"white \" //图片没显现小圆点的颜色为白色\r\n              }\r\n              itemList[index].style.transition = \"opacity 1s ease .2s\"\r\n              itemList[index].style.opacity = 1; //图片透明度为1图片显现\r\n              pagenationList[index].style.background = \"blue\" //图片显现小圆点的颜色为蓝色\r\n          }\r\n          next.onclick = nextFn; //下一张（点击事件）点击切换下一张图片\r\n          up.onclick = function () { //上一张（点击事件）点击切换上一张图片\r\n              index = index <= 0 ? itemList.length - 1 : --index; //判断点击到了第一张图片再次点击返回到最后一张图\r\n              for (const i = 0; i < itemList.length; i++) {\r\n                  itemList[i].style.opacity = 0;\r\n                  pagenationList[i].style.background = \"white\"\r\n              }\r\n              itemList[index].style.transition = \"opacity 1s ease .2s\" //增加过渡效果\r\n              itemList[index].style.opacity = 1;\r\n              pagenationList[index].style.background = \"blue\"\r\n          }\r\n          //设置定时器，自动向下播放图片\r\n          const t1 = setInterval(nextFn, 2000)\r\n          banner.onmouseover = function () {\r\n              clearInterval(t1);\r\n          }\r\n          banner.onmouseout = function () {\r\n              t1 = setInterval(nextFn, 2000)\r\n          }\r\n          // 事件委托\r\n          pagenation.onclick = function (event) {\r\n              event = window.event || event\r\n              console.log(event);\r\n              if (event.target.className == \"pagenation\") {\r\n                  console.log(\"点击的是父元素\");\r\n              } else {\r\n                const id = event.target.id;\r\n                const photoIndex = null;\r\n                  for (const i = 0; i < pagenationList.length; i++) {\r\n                      pagenationList[i].style.background = \"white\"\r\n                      if (id.indexOf(i) >= 0) {\r\n                          photoIndex = i;\r\n                      }\r\n                  }\r\n                  event.target.style.background = \"blue\"\r\n                  index = photoIndex; // 将小圆点对应的下标与图片下标对应\r\n                  for (const i = 0; i < itemList.length; i++) {\r\n                      itemList[i].style.opacity = 0;\r\n                  }\r\n                  itemList[index].style.transition = \"opacity 1s ease .2s\"\r\n                  itemList[photoIndex].style.opacity = 1;\r\n              }\r\n          }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  \r\n  <style>\r\n\r\n  @import url(../assets/css/banner.css);\r\n  </style>"]},"metadata":{},"sourceType":"module"}